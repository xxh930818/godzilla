{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxiaohui/Work/godzilla/src/components/Alert/alert.tsx\";\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleOutlined from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { replaceElement } from '../_utils/reactNode';\nconst iconMapFilled = {\n  success: CheckCircleFilled,\n  info: InfoCircleOutlined,\n  warning: ExclamationCircleFilled,\n  error: CloseCircleFilled\n};\nexport const Alert = ({\n  style,\n  className,\n  type,\n  message,\n  description,\n  closeText,\n  closable,\n  showIcon,\n  ...prop\n}) => {\n  const [closed, setClosed] = useState(false);\n  const clasess = classNames('vikingship-alert', className, {\n    [`vikingship-alert-${type}`]: type,\n    \"vikingship-alert-with-description\": description\n  }); // \n\n  const handleClose = e => {\n    var _prop$onClose;\n\n    setClosed(true);\n    (_prop$onClose = prop.onClose) === null || _prop$onClose === void 0 ? void 0 : _prop$onClose.call(prop, e);\n  };\n\n  const isClosable = closeText ? true : closable;\n\n  const renderCloseIcon = () => isClosable ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"vikingship-close-icon\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, closeText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vikingship-close-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, isClosable) : /*#__PURE__*/React.createElement(CloseOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }\n  })) : null;\n\n  const renderIconNode = () => {\n    let iconType = iconMapFilled[type];\n    const icon = prop.icon;\n\n    if (icon) {\n      return replaceElement(icon, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"vikingship-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, icon), () => ({\n        className: classNames('vikingship-icon', {\n          [icon.props.className]: icon.props.className\n        })\n      }));\n    }\n\n    return React.createElement(iconType, {\n      className: `vikingship-icon vikingship-icon-${type}`\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, !closed && /*#__PURE__*/React.createElement(\"div\", {\n    className: clasess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }\n  }, showIcon && renderIconNode(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vikingship-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vikingship-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, message), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vikingship-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, description)), renderCloseIcon()));\n};\nexport default Alert;\n\ntry {\n  // @ts-ignore\n  Alert.displayName = \"Alert\"; // @ts-ignore\n\n  Alert.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Alert\",\n    \"props\": {\n      \"type\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"type\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"\\\"info\\\"\"\n          }, {\n            \"value\": \"\\\"success\\\"\"\n          }, {\n            \"value\": \"\\\"warning\\\"\"\n          }, {\n            \"value\": \"\\\"error\\\"\"\n          }]\n        }\n      },\n      \"message\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"message\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"description\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"description\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"showIcon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"showIcon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"closable\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"closable\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"closeText\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"closeText\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"icon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"icon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"style\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"style\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"onClose\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onClose\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"afterClose\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"afterClose\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"() => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Alert/alert.tsx#Alert\"] = {\n      docgenInfo: Alert.__docgenInfo,\n      name: \"Alert\",\n      path: \"src/components/Alert/alert.tsx#Alert\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\ntry {\n  // @ts-ignore\n  alert.displayName = \"alert\"; // @ts-ignore\n\n  alert.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"alert\",\n    \"props\": {\n      \"type\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"type\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"\\\"info\\\"\"\n          }, {\n            \"value\": \"\\\"success\\\"\"\n          }, {\n            \"value\": \"\\\"warning\\\"\"\n          }, {\n            \"value\": \"\\\"error\\\"\"\n          }]\n        }\n      },\n      \"message\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"message\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"description\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"description\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"showIcon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"showIcon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"closable\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"closable\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"closeText\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"closeText\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"icon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"icon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"style\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"style\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"onClose\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onClose\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"afterClose\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"afterClose\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"() => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Alert/alert.tsx#alert\"] = {\n      docgenInfo: alert.__docgenInfo,\n      name: \"alert\",\n      path: \"src/components/Alert/alert.tsx#alert\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/Users/xiaoxiaohui/Work/godzilla/src/components/Alert/alert.tsx"],"names":["iconMapFilled","success","info","warning","error","CloseCircleFilled","Alert","prop","useState","clasess","classNames","type","description","handleClose","e","setClosed","isClosable","closeText","renderCloseIcon","renderIconNode","iconType","icon","replaceElement","className","showIcon","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","alert"],"mappings":"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","sourcesContent":["import React, {FC, ReactNode, useState} from 'react'\nimport classNames from 'classnames'\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleOutlined from '@ant-design/icons/ExclamationCircleFilled'\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled'\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled'\nimport { CloseOutlined} from '@ant-design/icons'\nimport {replaceElement} from '../_utils/reactNode'\n\n \n\nconst iconMapFilled = {\n    success:CheckCircleFilled,\n    info:InfoCircleOutlined,\n    warning: ExclamationCircleFilled,\n    error:CloseCircleFilled\n}\n\ntype AlertMapFilled = 'success' | 'info' | 'warning'| 'error'\n\ninterface AlertProps {\n    type: AlertMapFilled,\n    message: ReactNode;\n    description?: ReactNode;\n    showIcon?: boolean;\n    closable?: boolean;\n    closeText?: ReactNode;\n    icon?: ReactNode;\n    className?: string;\n    style?: React.CSSProperties;\n    onClose?:React.MouseEventHandler<HTMLButtonElement>;\n    afterClose?: () => void,\n}\n\n\n\n\nexport const Alert:FC<AlertProps> = ({\n    style, \n    className, \n    type, \n    message,\n    description,\n    closeText,\n    closable,\n    showIcon,\n    ...prop\n}) => {\n    const [closed, setClosed] = useState(false)\n    const clasess = classNames('vikingship-alert', className, {\n        [`vikingship-alert-${type}`]: type, \n        \"vikingship-alert-with-description\": description\n    })\n    // \n    const handleClose = (e: React.MouseEvent<HTMLButtonElement>) => {\n        setClosed(true)\n        prop.onClose?.(e)\n    }\n    const isClosable = closeText ? true : closable\n    const renderCloseIcon = () => (\n        isClosable ? (\n            <button\n                className=\"vikingship-close-icon\"\n                onClick={handleClose}\n            >\n                {\n                    closeText ? (\n                        <span className=\"vikingship-close-text\">{isClosable}</span>\n                    ) :  <CloseOutlined />\n                }\n            </button>\n        ) : null\n    )\n\n    const renderIconNode = () => {\n        let iconType = iconMapFilled[type];\n        const icon = prop.icon\n        if( icon ) {\n            return replaceElement(icon, <span className=\"vikingship-icon\">{icon}</span>, ()=> ({\n                className: classNames('vikingship-icon', {\n                    [(icon as any).props.className]: (icon as any).props.className\n                })\n            }))\n        }\n        return React.createElement(iconType, {className: `vikingship-icon vikingship-icon-${type}`})\n    }\n\n    return (\n        <React.Fragment>\n            {\n                !closed && <div className={clasess} >\n                    {showIcon && renderIconNode()}\n                    <div className=\"vikingship-content\">\n                        <p className=\"vikingship-message\">{message}</p>\n                        <p className=\"vikingship-description\">{description}</p>\n                    </div>\n                    {/* {type &&  <Icon icon='check' />} */}\n                    {renderCloseIcon()}\n                </div>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Alert;try {\n    // @ts-ignore\n    Alert.displayName = \"Alert\";\n    // @ts-ignore\n    Alert.__docgenInfo = { \"description\": \"\", \"displayName\": \"Alert\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"\\\"info\\\"\" }, { \"value\": \"\\\"success\\\"\" }, { \"value\": \"\\\"warning\\\"\" }, { \"value\": \"\\\"error\\\"\" }] } }, \"message\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"message\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"showIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showIcon\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"closable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"closable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"closeText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"closeText\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"afterClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"afterClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/alert.tsx#Alert\"] = { docgenInfo: Alert.__docgenInfo, name: \"Alert\", path: \"src/components/Alert/alert.tsx#Alert\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    alert.displayName = \"alert\";\n    // @ts-ignore\n    alert.__docgenInfo = { \"description\": \"\", \"displayName\": \"alert\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"\\\"info\\\"\" }, { \"value\": \"\\\"success\\\"\" }, { \"value\": \"\\\"warning\\\"\" }, { \"value\": \"\\\"error\\\"\" }] } }, \"message\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"message\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"showIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showIcon\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"closable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"closable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"closeText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"closeText\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"afterClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"afterClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/alert.tsx#alert\"] = { docgenInfo: alert.__docgenInfo, name: \"alert\", path: \"src/components/Alert/alert.tsx#alert\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}