{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxiaohui/Work/godzilla/src/components/AutoComplete/autoComplete.stories.tsx\";\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport { AutoComplete } from './autoComplete';\n\nconst SimpleComplete = () => {\n  // const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n  // 'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  // const lakersWithNumber = [\n  //   {value: 'bradley', number: 11},\n  //   {value: 'pope', number: 1},\n  //   {value: 'caruso', number: 4},\n  //   {value: 'cook', number: 2},\n  //   {value: 'cousins', number: 15},\n  //   {value: 'james', number: 23},\n  //   {value: 'AD', number: 3},\n  //   {value: 'green', number: 14},\n  //   {value: 'howard', number: 39},\n  //   {value: 'kuzma', number: 0},\n  // ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({value: name}))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = query => {\n    return fetch(`https://api.github.com/search/users?q=${query}`).then(res => res.json()).then(({\n      items\n    }) => {\n      console.log(items);\n      return items.slice(0, 10).map(item => ({\n        value: item.login,\n        ...item\n      }));\n    });\n  }; // const renderOption = (item: DataSourceType) => {\n  //   const itemWithGithub = item as DataSourceType<GithubUserProps>\n  //   return (\n  //     <>\n  //       <h2>Name: {itemWithGithub.value}</h2>\n  //       <p>url: {itemWithGithub.url}</p>\n  //     </>\n  //   )\n  // }\n\n\n  return /*#__PURE__*/React.createElement(AutoComplete, {\n    fetchSuggestions: handleFetch,\n    onSelect: action('selected') //renderOption={renderOption}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n};\n\nstoriesOf('AutoComplete Component', module).add('AutoComplete', SimpleComplete);","map":{"version":3,"sources":["/Users/xiaoxiaohui/Work/godzilla/src/components/AutoComplete/autoComplete.stories.tsx"],"names":["SimpleComplete","handleFetch","query","res","items","console","item","value","action","storiesOf"],"mappings":";AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,QAAA,kBAAA;AACA,SAAA,MAAA,QAAA,0BAAA;AACA,SAAA,YAAA,QAAA,gBAAA;;AAUA,MAAMA,cAAc,GAAG,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAmB;AACrC,WAAO,KAAK,CAAE,yCAAwCA,KAA/C,EAAK,CAAL,CAAA,IAAA,CACCC,GAAG,IAAIA,GAAG,CADX,IACQA,EADR,EAAA,IAAA,CAEC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAe;AACnBC,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,KAAAA;AACA,aAAO,KAAK,CAAL,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAwBC,IAAD,KAAgB;AAAEC,QAAAA,KAAK,EAAED,IAAI,CAAb,KAAA;AAAqB,WAAGA;AAAxB,OAAhB,CAAvB,CAAP;AAJJ,KAAO,CAAP;AAtByB,GAqB3B,CArB2B,CA8B3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AACE,IAAA,gBAAgB,EADlB,WAAA;AAEE,IAAA,QAAQ,EAAEE,MAAM,CAFlB,UAEkB,CAFlB,CAGE;AAHF;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CADF;AAvCF,CAAA;;AAgDAC,SAAS,CAAA,wBAAA,EAATA,MAAS,CAATA,CAAAA,GAAAA,CAAAA,cAAAA,EAAAA,cAAAA","sourcesContent":["import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { AutoComplete } from './autoComplete'\ninterface LakerPlayerProps {\n  value: string;\n  number: number;\n}\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\nconst SimpleComplete = () => {\n  // const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n  // 'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  // const lakersWithNumber = [\n  //   {value: 'bradley', number: 11},\n  //   {value: 'pope', number: 1},\n  //   {value: 'caruso', number: 4},\n  //   {value: 'cook', number: 2},\n  //   {value: 'cousins', number: 15},\n  //   {value: 'james', number: 23},\n  //   {value: 'AD', number: 3},\n  //   {value: 'green', number: 14},\n  //   {value: 'howard', number: 39},\n  //   {value: 'kuzma', number: 0},\n  // ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({value: name}))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item}))\n      })\n  }\n\n  // const renderOption = (item: DataSourceType) => {\n  //   const itemWithGithub = item as DataSourceType<GithubUserProps>\n  //   return (\n  //     <>\n  //       <h2>Name: {itemWithGithub.value}</h2>\n  //       <p>url: {itemWithGithub.url}</p>\n  //     </>\n  //   )\n  // }\n  return (\n    <AutoComplete \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      //renderOption={renderOption}\n    />\n  )\n}\n\nstoriesOf('AutoComplete Component', module)\n  .add('AutoComplete', SimpleComplete)"]},"metadata":{},"sourceType":"module"}