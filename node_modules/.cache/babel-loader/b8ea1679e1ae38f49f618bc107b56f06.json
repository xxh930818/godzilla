{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxiaohui/Work/godzilla/src/components/InputNumber/InputNumber.tsx\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { useClickOutside2 } from '../../hooks/useClickOutside';\nimport { Icon } from '../icon';\nimport { Input } from '../Input';\nexport const InputNumber = props => {\n  const {\n    onValueChange,\n    type = 'default',\n    defaultValue,\n    children,\n    ...restprops\n  } = props;\n  const [value, setvalue] = useState(defaultValue || null);\n  const [show, setShow] = useState(false);\n  const handleChange = useCallback(e => {\n    const val = e.target.value;\n\n    if (val === '') {\n      setvalue('');\n      return;\n    }\n\n    if (val.charAt(val.length - 1) === '.') {\n      if (val.indexOf('.') !== val.length - 1) {\n        return;\n      }\n\n      setvalue(val);\n      return;\n    }\n\n    const num = Number(val);\n\n    if (!isNaN(num)) {\n      setvalue(num);\n    } else {\n      console.warn('value is ' + val + ' not a number');\n    }\n  }, []);\n  const handleUp = useCallback(() => {\n    const currVal = value || 0;\n    setvalue(parseFloat(currVal + '') + 1);\n  }, [value]);\n  const handleDown = useCallback(() => {\n    const currVal = value || 0;\n    setvalue(parseFloat(currVal + '') - 1);\n  }, [value]);\n  const ref = useRef();\n  const inputRef = useRef();\n  useClickOutside2(ref, inputRef, () => {\n    setShow(false);\n  });\n\n  const renderNumber = num => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => setvalue(val => {\n        if (!val) {\n          return num;\n        }\n\n        if (num === '.') {\n          if (typeof val === 'string' && val.indexOf('.') !== val.length - 1 && val.indexOf('.') !== -1) {\n            return val;\n          }\n        }\n\n        return '' + val + num;\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }\n    }, num);\n  };\n\n  return /*#__PURE__*/React.createElement(Input, Object.assign({}, restprops, {\n    value: value,\n    onChange: handleChange,\n    inputRef: inputRef,\n    onFocus: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), type === 'default' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"number-arrow-up\",\n    onClick: handleUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"angle-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"number-arrow-down\",\n    onClick: handleDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"angle-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }))) : show ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n    className: \"calculator-icon\",\n    icon: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"number-calculator\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, [7, 8, 9, 4, 5, 6, 1, 2, 3, 0, '.'].map(val => renderNumber(val)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"\\u786E\\u8BA4\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n    className: \"calculator-icon\",\n    icon: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/xiaoxiaohui/Work/godzilla/src/components/InputNumber/InputNumber.tsx"],"names":["InputNumber","props","type","restprops","useState","defaultValue","handleChange","useCallback","e","val","setvalue","num","Number","isNaN","console","handleUp","currVal","value","parseFloat","handleDown","ref","useRef","inputRef","useClickOutside2","setShow","renderNumber","show"],"mappings":"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","sourcesContent":["import React, { InputHTMLAttributes, useCallback, useRef, useState } from 'react';\nimport {useClickOutside2} from '../../hooks/useClickOutside';\nimport { Icon } from '../icon';\nimport {Input} from '../Input';\n\nexport interface InputNumberProps extends Omit<InputHTMLAttributes<HTMLElement>, 'size'> {\n    /**\n     * disabled\n     */\n    disabled?: boolean;\n    /**\n     * type\n     */\n    type?: 'default' | 'calculator';\n    /**\n     * default value\n     */\n    defaultValue?: number | string;\n    /**\n     * size\n     */\n    size?: 'df' | 'lg' | 'sm';\n    /**\n     * onchange\n     */\n    onValueChange?: (option: number) => void;\n}\n\nexport const InputNumber: React.FC<InputNumberProps> = (props) => {\n    const {onValueChange, type = 'default', defaultValue, children, ...restprops} = props;\n    \n    const [value, setvalue] = useState<number | string>(defaultValue || null);\n    const [show, setShow] = useState<boolean>(false);\n    const handleChange = useCallback((e) => {\n        const val: string = e.target.value;\n        if (val === '') {\n            setvalue('');\n            return;\n        }\n        if (val.charAt(val.length - 1) === '.') {\n            if (val.indexOf('.') !== (val.length - 1)) {\n                return;\n            }\n            setvalue(val);\n            return;\n        }\n        const num: number = Number(val);\n        if (!isNaN(num)) {\n            setvalue(num);\n        } else {\n            console.warn('value is ' + val + ' not a number');\n        }\n    }, []);\n    const handleUp = useCallback(() => {\n        const currVal = value || 0;\n        setvalue(parseFloat(currVal + '') + 1)\n    }, [value]);\n    const handleDown = useCallback(() => {\n        const currVal = value || 0;\n        setvalue(parseFloat(currVal + '') - 1)\n    }, [value]);\n\n    const ref = useRef();\n    const inputRef = useRef<HTMLElement>();\n\n    useClickOutside2(ref,inputRef, () => {\n        setShow(false);\n    });\n    const renderNumber = (num) => {\n        return <span onClick={() => setvalue(val => {\n            if (!val) {\n                return num;\n            }\n            if (num === '.') {\n                if (typeof val === 'string' && val.indexOf('.') !== (val.length - 1) \n                    && val.indexOf('.') !== -1) {\n                    return val;\n                }\n            }\n            return '' + val + num;\n        })}>{num}</span>\n    }\n    return (\n        <Input {...restprops} value={value}\n          onChange={handleChange} inputRef={inputRef}\n          onFocus={() => setShow(true)}\n        >\n            {type === 'default' ? \n            <>\n            <span className=\"number-arrow-up\"\n                onClick={handleUp}\n            >\n                <Icon icon=\"angle-up\"></Icon>\n            </span>\n            <span className=\"number-arrow-down\"\n                onClick={handleDown}\n            >\n                <Icon icon=\"angle-down\"></Icon>\n            </span> \n            </>:\n            (show ? <>\n            <Icon className=\"calculator-icon\" icon=\"calculator\"></Icon>\n            <div className=\"number-calculator\" ref={ref}>\n                {[7,8,9,4,5,6,1,2,3,0,'.'].map(val => renderNumber(val))}\n                <span>确认</span>\n            </div></> : <><Icon className=\"calculator-icon\" icon=\"calculator\"></Icon></>)\n           }\n        </Input>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}