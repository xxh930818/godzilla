{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxiaohui/Work/godzilla/src/components/Transition/transition.tsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Transition = props => {\n  const {\n    children,\n    classNames,\n    animation,\n    wrapper,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({\n    classNames: classNames ? classNames : animation\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), wrapper ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  }, children) : children);\n};\n\nTransition.defaultProps = {\n  unmountOnExit: true,\n  appear: true\n};\nexport default Transition;","map":{"version":3,"sources":["/Users/xiaoxiaohui/Work/godzilla/src/components/Transition/transition.tsx"],"names":["Transition","props","restProps","classNames","animation","wrapper","unmountOnExit","appear"],"mappings":";AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,aAAA,QAAA,wBAAA;;AAUA,MAAMA,UAAqC,GAAIC,KAAD,IAAW;AACvD,QAAM;AAAA,IAAA,QAAA;AAAA,IAAA,UAAA;AAAA,IAAA,SAAA;AAAA,IAAA,OAAA;AAKJ,OAAGC;AALC,MAAN,KAAA;AAOA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,UAAU,EAAKC,UAAU,GAAA,UAAA,GAAgBC;AAD3C,GAAA,EAAA,SAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAIGC,OAAO,GAAA,aAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAH,QAAG,CAAH,GALZ,QACE,CADF;AARF,CAAA;;AAiBAL,UAAU,CAAVA,YAAAA,GAA0B;AACxBM,EAAAA,aAAa,EADW,IAAA;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1BP;AAKA,eAAA,UAAA","sourcesContent":["import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right'\n\ntype TransitionProps = CSSTransitionProps & {\n  animation?: AnimationName,\n  wrapper? : boolean,\n}\n\nconst Transition: React.FC<TransitionProps> = (props) => {\n  const {\n    children,\n    classNames,\n    animation,\n    wrapper,\n    ...restProps\n  } = props\n  return (\n    <CSSTransition\n      classNames = { classNames ? classNames : animation}\n      {...restProps}\n    >\n      {wrapper ? <div>{children}</div> : children}\n    </CSSTransition>\n  )\n}\nTransition.defaultProps = {\n  unmountOnExit: true,\n  appear: true,\n}\n\nexport default Transition"]},"metadata":{},"sourceType":"module"}