{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxiaohui/Work/godzilla/src/components/InputDate/inputDate.tsx\";\nimport React, { useRef, useState } from \"react\";\nimport { useClickOutside2 } from \"../../hooks/useClickOutside\";\nimport Icon from \"../Icon\";\nimport { Input } from \"../Input/input\";\nimport Transition from \"../Transition\";\nimport classnames from \"classnames\";\nconst reg = /\\d{4}-\\d{2}-\\d{2}/;\nconst CalendarMap = {\n  0: 31,\n  1: 28,\n  2: 31,\n  3: 30,\n  4: 31,\n  5: 30,\n  6: 31,\n  7: 31,\n  8: 30,\n  9: 31,\n  10: 30,\n  11: 31\n};\n\nfunction getDays(date) {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  let flag = date.getFullYear() === year && date.getMonth() === month;\n  const daysArr = [];\n  const firstDayOfMonth = new Date(date.getTime());\n  firstDayOfMonth.setDate(1);\n  const daysOfMonth = CalendarMap[firstDayOfMonth.getMonth()];\n\n  for (let i = 0; i < daysOfMonth; i++) {\n    let item = {\n      num: i + 1,\n      valid: true,\n      today: null\n    };\n\n    if (flag && item.num === now.getDate()) {\n      item.today = true;\n    }\n\n    daysArr.push(item);\n  }\n\n  const dayOfWeek = firstDayOfMonth.getDay();\n  let preMonth = firstDayOfMonth.getMonth() - 1;\n\n  if (preMonth < 0) {\n    preMonth += 12;\n  }\n\n  let daysOfBeforMonth = CalendarMap[preMonth];\n\n  for (let i = 0; i < dayOfWeek; i++) {\n    daysArr.unshift({\n      num: daysOfBeforMonth,\n      valid: false\n    });\n    daysOfBeforMonth--;\n  }\n\n  let reside = 7 - daysArr.length % 7;\n\n  for (let i = 0; i < reside; i++) {\n    daysArr.push({\n      num: i + 1,\n      valid: false\n    });\n  }\n\n  let rowNum = daysArr.length / 7;\n  let result = [];\n\n  for (let i = 0; i < rowNum; i++) {\n    result.push(daysArr.slice(i * 7, (i + 1) * 7));\n  }\n\n  return result;\n}\n\nfunction getFullMonth(month) {\n  if (month < 9) {\n    return \"0\" + (month + 1);\n  }\n\n  return \"\" + (month + 1);\n}\n\nfunction simpleMonthFormate(date) {\n  return date.getFullYear() + \"年\" + getFullMonth(date.getMonth()) + \"月\";\n}\n\nfunction simpleDateFormate(date) {\n  return date.getFullYear() + \"-\" + getFullMonth(date.getMonth()) + \"-\" + date.getDate();\n}\n\nfunction dateParse(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var year = parseInt(dateArr[0]);\n  var month = parseInt(dateArr[1]);\n  var day = parseInt(dateArr[2]);\n  var date = new Date(year, month - 1, day);\n  return date;\n}\n\nexport const InputDate = ({ ...restprops\n}) => {\n  const [date, setDate] = useState(new Date());\n  const [show, setShow] = useState(false);\n  const ref = useRef();\n  const inputRef = useRef();\n  useClickOutside2(ref, inputRef, () => {\n    setShow(false);\n  });\n  const [value, setValue] = useState(simpleDateFormate(new Date()));\n\n  function handleChange(e) {\n    setValue(e.target.value);\n\n    if (reg.test(e.target.value)) {\n      const val = dateParse(e.target.value);\n      val && setDate(val);\n    }\n  }\n\n  function handleBlur() {\n    if (!reg.test(value)) {\n      setValue(simpleDateFormate(date));\n    }\n  }\n\n  const dates = getDays(date);\n  const yearMonthStr = simpleMonthFormate(date);\n\n  function nextMonth() {\n    let newDate = new Date(date.getTime());\n    newDate.setMonth(date.getMonth() + 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n\n  function preMonth() {\n    let newDate = new Date(date.getTime());\n    newDate.setMonth(date.getMonth() - 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n\n  function nextYear() {\n    let newDate = new Date(date.getTime());\n    newDate.setFullYear(date.getFullYear() + 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n\n  function preYear() {\n    let newDate = new Date(date.getTime());\n    newDate.setFullYear(date.getFullYear() - 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n\n  function handleClick(num) {\n    let nextDate = new Date(date.getTime());\n    nextDate.setDate(num);\n    setDate(nextDate);\n    setValue(simpleDateFormate(nextDate));\n  }\n\n  return /*#__PURE__*/React.createElement(Input, Object.assign({}, restprops, {\n    value: value,\n    onChange: handleChange,\n    inputRef: inputRef,\n    onFocus: () => setShow(true),\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    className: \"calendar-icon\",\n    icon: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Transition, {\n    in: show,\n    animation: \"zoom-in-top\",\n    timeout: 250,\n    wrapper: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"angle-double-left\",\n    icon: \"angle-double-left\",\n    onClick: preYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    className: \"angle-left\",\n    icon: \"angle-left\",\n    onClick: preMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"calendar-month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, yearMonthStr), /*#__PURE__*/React.createElement(Icon, {\n    className: \"angle-right\",\n    icon: \"angle-right\",\n    onClick: nextMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    className: \"angle-double-right\",\n    icon: \"angle-double-right\",\n    onClick: nextYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"\\u65E5\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"\\u4E00\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"\\u4E8C\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"\\u4E09\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"\\u56DB\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, \"\\u4E94\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, \"\\u516D\")), dates.map(week => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, week.map(d => {\n      let clz = classnames({\n        invalid: !d.valid,\n        today: d.today,\n        current: d.valid && d.num === date.getDate()\n      });\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: clz,\n        onClick: () => d.valid && handleClick(d.num),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 23\n        }\n      }, d.num);\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-botton\",\n    onClick: () => setDate(new Date()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"\\u4ECA\\u5929\"))));\n};","map":{"version":3,"sources":["/Users/xiaoxiaohui/Work/godzilla/src/components/InputDate/inputDate.tsx"],"names":["reg","CalendarMap","now","year","month","flag","date","daysArr","firstDayOfMonth","daysOfMonth","i","item","num","valid","today","dayOfWeek","preMonth","daysOfBeforMonth","reside","rowNum","result","getFullMonth","dateArr","dateStr","parseInt","day","InputDate","restprops","useState","ref","useRef","inputRef","useClickOutside2","setShow","simpleDateFormate","setValue","e","val","dateParse","setDate","dates","getDays","yearMonthStr","simpleMonthFormate","newDate","nextDate","week","d","clz","classnames","invalid","current","handleClick"],"mappings":"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","sourcesContent":["import React, { InputHTMLAttributes, useRef, useState } from \"react\";\nimport { useClickOutside2 } from \"../../hooks/useClickOutside\";\nimport Icon from \"../Icon\";\nimport { Input } from \"../Input/input\";\nimport Transition from \"../Transition\";\nimport classnames from \"classnames\";\n\nexport interface InputDateProps\n  extends Omit<InputHTMLAttributes<HTMLElement>, \"size\"> {\n  /**\n   * type\n   */\n  type: \"date\" | \"date-range\";\n  /**\n   * size\n   */\n  size?: \"df\" | \"lg\" | \"sm\";\n}\nconst reg = /\\d{4}-\\d{2}-\\d{2}/;\nconst CalendarMap = {\n  0: 31,\n  1: 28,\n  2: 31,\n  3: 30,\n  4: 31,\n  5: 30,\n  6: 31,\n  7: 31,\n  8: 30,\n  9: 31,\n  10: 30,\n  11: 31,\n};\nfunction getDays(\n  date: Date\n): Array<Array<{ num: number; valid: boolean; today?: boolean }>> {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  let flag = date.getFullYear() === year && date.getMonth() === month;\n\n  const daysArr: Array<{ num: number; valid: boolean; today?: boolean }> = [];\n  const firstDayOfMonth = new Date(date.getTime());\n  firstDayOfMonth.setDate(1);\n  const daysOfMonth = CalendarMap[firstDayOfMonth.getMonth()];\n  for (let i = 0; i < daysOfMonth; i++) {\n    let item = {\n      num: i + 1,\n      valid: true,\n      today: null,\n    };\n    if (flag && item.num === now.getDate()) {\n      item.today = true;\n    }\n    daysArr.push(item);\n  }\n  const dayOfWeek = firstDayOfMonth.getDay();\n  let preMonth = firstDayOfMonth.getMonth() - 1;\n  if (preMonth < 0) {\n    preMonth += 12;\n  }\n  let daysOfBeforMonth: number = CalendarMap[preMonth];\n  for (let i = 0; i < dayOfWeek; i++) {\n    daysArr.unshift({\n      num: daysOfBeforMonth,\n      valid: false,\n    });\n    daysOfBeforMonth--;\n  }\n\n  let reside = 7 - (daysArr.length % 7);\n  for (let i = 0; i < reside; i++) {\n    daysArr.push({\n      num: i + 1,\n      valid: false,\n    });\n  }\n  let rowNum = daysArr.length / 7;\n  let result: Array<Array<{ num: number; valid: boolean }>> = [];\n  for (let i = 0; i < rowNum; i++) {\n    result.push(daysArr.slice(i * 7, (i + 1) * 7));\n  }\n  return result;\n}\nfunction getFullMonth(month: number) {\n  if (month < 9) {\n    return \"0\" + (month + 1);\n  }\n  return \"\" + (month + 1);\n}\nfunction simpleMonthFormate(date: Date) {\n  return date.getFullYear() + \"年\" + getFullMonth(date.getMonth()) + \"月\";\n}\nfunction simpleDateFormate(date: Date) {\n  return (\n    date.getFullYear() +\n    \"-\" +\n    getFullMonth(date.getMonth()) +\n    \"-\" +\n    date.getDate()\n  );\n}\nfunction dateParse(dateStr: string): Date | null {\n  var dateArr = dateStr.split(\"-\");\n  var year = parseInt(dateArr[0]);\n  var month = parseInt(dateArr[1]);\n  var day = parseInt(dateArr[2]);\n  var date = new Date(year, month - 1, day);\n  return date;\n}\nexport const InputDate: React.FC<InputDateProps> = ({ ...restprops }) => {\n  const [date, setDate] = useState<Date>(new Date());\n  const [show, setShow] = useState<boolean>(false);\n  const ref: any = useRef();\n  const inputRef = useRef<HTMLElement>();\n  useClickOutside2(ref, inputRef, () => {\n    setShow(false);\n  });\n  const [value, setValue] = useState<string>(simpleDateFormate(new Date()));\n  function handleChange(e) {\n    setValue(e.target.value);\n    if (reg.test(e.target.value)) {\n      const val = dateParse(e.target.value);\n      val && setDate(val);\n    }\n  }\n  function handleBlur() {\n    if (!reg.test(value)) {\n      setValue(simpleDateFormate(date));\n    }\n  }\n  const dates = getDays(date);\n  const yearMonthStr = simpleMonthFormate(date);\n  function nextMonth() {\n    let newDate = new Date(date.getTime());\n    newDate.setMonth(date.getMonth() + 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n  function preMonth() {\n    let newDate = new Date(date.getTime());\n    newDate.setMonth(date.getMonth() - 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n  function nextYear() {\n    let newDate = new Date(date.getTime());\n    newDate.setFullYear(date.getFullYear() + 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n  function preYear() {\n    let newDate = new Date(date.getTime());\n    newDate.setFullYear(date.getFullYear() - 1);\n    setDate(newDate);\n    setValue(simpleDateFormate(newDate));\n  }\n  function handleClick(num) {\n    let nextDate = new Date(date.getTime());\n    nextDate.setDate(num);\n    setDate(nextDate);\n    setValue(simpleDateFormate(nextDate));\n  }\n  return (\n    <Input\n      {...restprops}\n      value={value}\n      onChange={handleChange}\n      inputRef={inputRef}\n      onFocus={() => setShow(true)}\n      onBlur={handleBlur}\n    >\n      <Icon className=\"calendar-icon\" icon=\"calendar\"></Icon>\n      <Transition\n        in={show}\n        animation=\"zoom-in-top\"\n        timeout={250}\n        wrapper={false}\n      >\n        <div className=\"calendar\" ref={ref}>\n          <div className=\"calendar-title\">\n            <Icon\n              className=\"angle-double-left\"\n              icon=\"angle-double-left\"\n              onClick={preYear}\n            ></Icon>\n            <Icon\n              className=\"angle-left\"\n              icon=\"angle-left\"\n              onClick={preMonth}\n            ></Icon>\n            <span className=\"calendar-month\">{yearMonthStr}</span>\n            <Icon\n              className=\"angle-right\"\n              icon=\"angle-right\"\n              onClick={nextMonth}\n            ></Icon>\n            <Icon\n              className=\"angle-double-right\"\n              icon=\"angle-double-right\"\n              onClick={nextYear}\n            ></Icon>\n          </div>\n          <table>\n            <tr>\n              <th>日</th>\n              <th>一</th>\n              <th>二</th>\n              <th>三</th>\n              <th>四</th>\n              <th>五</th>\n              <th>六</th>\n            </tr>\n            {dates.map((week) => {\n              return (\n                <tr>\n                  {week.map((d) => {\n                    let clz = classnames({\n                      invalid: !d.valid,\n                      today: d.today,\n                      current: d.valid && d.num === date.getDate(),\n                    });\n                    return (\n                      <td\n                        className={clz}\n                        onClick={() => d.valid && handleClick(d.num)}\n                      >\n                        {d.num}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </table>\n          <div className=\"calendar-botton\" onClick={() => setDate(new Date())}>\n            今天\n          </div>\n        </div>\n      </Transition>\n    </Input>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}